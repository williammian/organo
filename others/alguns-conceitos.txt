Qual a diferença entre controlar uma variável com o useState e criar e atribuir normalmente uma let?

Sempre que queremos que o componente reaja a alguma alteração no valor de uma variável e se renderize novamente, 
precisamos indicar isto utilizando o useState. Do contrário, o valor vai ser alterado mas o DOM não será atualizado.

https://pt-br.reactjs.org/docs/hooks-reference.html#functional-updates


--------------------------------------


Stateless VS Statefull

React tem duas abordagens diferentes para lidar com inputs de formulários.

Um elemento de input de formulário cujo valor é controlado pelo React é chamado de componente controlado (statefull em inglês). 
Quando o usuário insere dados em um componente controlado, o evento que manipula essa alteração é disparado e o seu código 
decide se o input é válido (ou seja, renderizado com o valor atualizado). Se você não re-renderizar o elemento de formulário, 
permanecerá inalterado.

Um componente não controlado (stateless em inglês) funciona como um elemento de formulário fora do React. 
Quando um usuário insere dados em um campo de formulário (um input box, dropbox, etc), a informação atualizada é refletida 
sem necessidade do React fazer nada. No entanto, isso também significa que você não pode forçar o campo a ter um certo valor.


—--------------------------------------


Prop drilling

Prop drilling, em tradução livre, significa "vazamento de props", e acontece quando você passa uma ou mais props, 
do pai para o filho, o filho passa para o filho dele, e assim por diante. Lidar com esse prop drilling pode ser desafiador, 
pois em pouco tempo fica difícil para qualquer pessoa descobrir onde os dados são inicializados, atualizados e usados de fato.

https://www.alura.com.br/artigos/prop-drilling-no-react-js


—--------------------------------------
